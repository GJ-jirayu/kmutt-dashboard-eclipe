CREATE PROCEDURE curriculum_arrange_type_by_field (IN paramYEAR INTEGER,IN paramEDU VARCHAR(256)) 
DYNAMIC RESULT SETS 1 
LANGUAGE SQL 
BEGIN 
    DECLARE result_set_1 CURSOR WITH RETURN TO CLIENT FOR

select case when gj2.FACULTY_NAME_INITIAL  = 'KMUTT' then 'อื่นๆ' else FACULTY_NAME_INITIAL end as FACULTY_NAME_INITIAL
,gj2.ARRANGE_TYPE
,CASE WHEN gj3.Total_FIELD != 0 THEN DECIMAL(((DECIMAL(gj2.Total_FIELD,8,2) * 100)/gj3.Total_FIELD),8,2) ELSE 0 END AS Totalemploy
from 
(select FACULTY_CODE
,FACULTY_NAME_INITIAL
,ARRANGE_TYPE
,count(FIELD_KEY) as Total_FIELD
from 
(
select DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,DIM_PROGRAM.ARRANGE_TYPE
,fact_all_student.FIELD_KEY
from fact_all_student
left join DIM_PROGRAM on DIM_PROGRAM.PROGRAM_KEY = fact_all_student.PROGRAM_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = fact_all_student.FIELD_KEY
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = fact_all_student.SEMESTER_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR in (paramYEAR))
and (DIM_PROGRAM.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
group by DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,DIM_PROGRAM.ARRANGE_TYPE
,fact_all_student.FIELD_KEY
)gj
group by FACULTY_CODE
,FACULTY_NAME_INITIAL
,ARRANGE_TYPE
)gj2
left join (
select FACULTY_CODE
,count(FIELD_KEY) as Total_FIELD
from 
(
select DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,DIM_PROGRAM.ARRANGE_TYPE
,fact_all_student.FIELD_KEY
from fact_all_student
left join DIM_PROGRAM on DIM_PROGRAM.PROGRAM_KEY = fact_all_student.PROGRAM_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = fact_all_student.FIELD_KEY
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = fact_all_student.SEMESTER_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR in (paramYEAR))
and (DIM_PROGRAM.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
group by DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,DIM_PROGRAM.ARRANGE_TYPE
,fact_all_student.FIELD_KEY
)gj
group by FACULTY_CODE
)gj3 on gj3.FACULTY_CODE = gj2.FACULTY_CODE
order by gj2.ARRANGE_TYPE desc
,gj2.FACULTY_CODE;

    OPEN result_set_1;
END