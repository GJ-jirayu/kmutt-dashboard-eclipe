CREATE PROCEDURE p_new_student_vs_plan_by_faculty (IN paramYEAR INTEGER,IN paramSEMESTER VARCHAR(256),IN paramFOREIGN VARCHAR(256),IN paramEDU VARCHAR(256))
DYNAMIC RESULT SETS 1 
LANGUAGE SQL 
BEGIN 
    DECLARE result_set_1 CURSOR WITH RETURN TO CLIENT FOR

select case when ACTUAL_PLAN.FACULTY_NAME_INITIAL = 'KMUTT' then 'อื่นๆ' else FACULTY_NAME_INITIAL end as FACULTY_NAME_INITIAL
,ACTUAL_PLAN.NEW_STUDENT_TYPE
,ACTUAL_PLAN.NO_OF_NEW_STUDENT_ACTUAL_PLAN
from
(SELECT DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,'จำนวนนักศึกษาใหม่' as NEW_STUDENT_TYPE
,sum(FACT_ACTUAL_PLAN.NO_OF_ACTUAL_NEW_STUDENT) as NO_OF_NEW_STUDENT_ACTUAL_PLAN
FROM FACT_ACTUAL_PLAN
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = FACT_ACTUAL_PLAN.SEMESTER_KEY
left join DIM_EDUCATION_LEVEL on DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_KEY = FACT_ACTUAL_PLAN.EDUCATION_LEVEL_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = FACT_ACTUAL_PLAN.FIELD_KEY
left join DIM_FOREIGN_FLAG on DIM_FOREIGN_FLAG.FOREIGN_FLAG_KEY = FACT_ACTUAL_PLAN.FOREIGN_FLAG_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR in (paramYEAR))
and (DIM_SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' = (paramSEMESTER))
and (DIM_FOREIGN_FLAG.FOREIGN_FLAG in (paramFOREIGN) or 'All' in (paramFOREIGN))
and (DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' = (paramEDU))
group by DIM_SEMESTER.ACADEMIC_YEAR
,DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL

union 

SELECT DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,'แผน' as NEW_STUDENT_TYPE
,sum(FACT_ACTUAL_PLAN.NO_OF_PLAN_NEW_STUDENT) as NO_OF_NEW_STUDENT_ACTUAL_PLAN
FROM FACT_ACTUAL_PLAN
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = FACT_ACTUAL_PLAN.SEMESTER_KEY
left join DIM_EDUCATION_LEVEL on DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_KEY = FACT_ACTUAL_PLAN.EDUCATION_LEVEL_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = FACT_ACTUAL_PLAN.FIELD_KEY
left join DIM_FOREIGN_FLAG on DIM_FOREIGN_FLAG.FOREIGN_FLAG_KEY = FACT_ACTUAL_PLAN.FOREIGN_FLAG_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR in (paramYEAR))
and (DIM_SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' = (paramSEMESTER))
and (DIM_FOREIGN_FLAG.FOREIGN_FLAG in (paramFOREIGN) or 'All' in (paramFOREIGN))
and (DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' = (paramEDU))
group by DIM_SEMESTER.ACADEMIC_YEAR
,DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL

union

select FACULTY_CODE
,FACULTY_NAME_INITIAL
,'จริงเทียบแผน' as NEW_STUDENT_TYPE
,CASE WHEN NO_OF_PLAN_NEW_STUDENT != 0 THEN DECIMAL(((DECIMAL(NO_OF_NEW_STUDENT_ACTUAL_PLAN,8,2) * 100)/NO_OF_PLAN_NEW_STUDENT),8,2) ELSE 0 END AS NO_OF_NEW_STUDENT_ACTUAL_PLAN
from
(SELECT DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
,sum(FACT_ACTUAL_PLAN.NO_OF_ACTUAL_NEW_STUDENT) as NO_OF_NEW_STUDENT_ACTUAL_PLAN
,sum(FACT_ACTUAL_PLAN.NO_OF_PLAN_NEW_STUDENT) as NO_OF_PLAN_NEW_STUDENT
FROM FACT_ACTUAL_PLAN
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = FACT_ACTUAL_PLAN.SEMESTER_KEY
left join DIM_EDUCATION_LEVEL on DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_KEY = FACT_ACTUAL_PLAN.EDUCATION_LEVEL_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = FACT_ACTUAL_PLAN.FIELD_KEY
left join DIM_FOREIGN_FLAG on DIM_FOREIGN_FLAG.FOREIGN_FLAG_KEY = FACT_ACTUAL_PLAN.FOREIGN_FLAG_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR in (paramYEAR))
and (DIM_SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' = (paramSEMESTER))
and (DIM_FOREIGN_FLAG.FOREIGN_FLAG in (paramFOREIGN) or 'All' in (paramFOREIGN))
and (DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' = (paramEDU))
group by DIM_SEMESTER.ACADEMIC_YEAR
,DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
)gj
) ACTUAL_PLAN
order by ACTUAL_PLAN.NEW_STUDENT_TYPE desc,ACTUAL_PLAN.FACULTY_CODE;
	
    OPEN result_set_1;
END