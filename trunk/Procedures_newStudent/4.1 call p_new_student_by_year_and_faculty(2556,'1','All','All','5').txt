CREATE PROCEDURE p_new_student_by_year_and_faculty (IN paramYEAR INTEGER,IN paramSEMESTER VARCHAR(256),IN paramFOREIGN VARCHAR(256),IN paramEDU VARCHAR(256),IN paramYEARSUB VARCHAR(256)) 
DYNAMIC RESULT SETS 1 
LANGUAGE SQL 
BEGIN 
    DECLARE result_set_1 CURSOR WITH RETURN TO CLIENT FOR

SELECT DIM_SEMESTER.ACADEMIC_YEAR
,case when DIM_FACULTY.FACULTY_NAME_INITIAL = 'KMUTT' then 'อื่นๆ' else FACULTY_NAME_INITIAL end as FACULTY_NAME_INITIAL
,sum(FACT_ACTUAL_PLAN.NO_OF_ACTUAL_NEW_STUDENT) as NO_OF_ACTUAL_NEW_STUDENT
FROM FACT_ACTUAL_PLAN
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = FACT_ACTUAL_PLAN.SEMESTER_KEY
left join DIM_EDUCATION_LEVEL on DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_KEY = FACT_ACTUAL_PLAN.EDUCATION_LEVEL_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = FACT_ACTUAL_PLAN.FIELD_KEY
left join DIM_FOREIGN_FLAG on DIM_FOREIGN_FLAG.FOREIGN_FLAG_KEY = FACT_ACTUAL_PLAN.FOREIGN_FLAG_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR between (paramYEAR)-(paramYEARSUB)+(1) and (paramYEAR))
and (DIM_SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' in (paramSEMESTER))
and (DIM_FOREIGN_FLAG.FOREIGN_FLAG in (paramFOREIGN) or 'All' in (paramFOREIGN))
and (DIM_EDUCATION_LEVEL.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
group by DIM_SEMESTER.ACADEMIC_YEAR
,DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
order by DIM_FACULTY.FACULTY_CODE,DIM_SEMESTER.ACADEMIC_YEAR;
	
    OPEN result_set_1;
END
