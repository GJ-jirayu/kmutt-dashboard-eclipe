CREATE PROCEDURE p_new_student_by_school(IN paramYEAR INTEGER,IN paramSEMESTER VARCHAR(256),IN paramEDU VARCHAR(256)) 
DYNAMIC RESULT SETS 1 
LANGUAGE SQL 
BEGIN 
    DECLARE result_set_1 CURSOR WITH RETURN TO CLIENT FOR

select gj2.PROVINCE_CODE
,gj2.PROVINCE
,gj2.REGION_CODE
,gj2.Total_PROVINCE
,gj2.Total_REGION
,COLOR_PROVINCE.COLOR_CODE
,COLOR_REGION.COLOR_CODE
,NO_OF_STUDENT_PROVINCE
,NO_OF_STUDENT_REGION
,DIM_MAP.REGION_MAP_NAME
from 

(select PROVINCE_CODE
,PROVINCE
,REGION_CODE
,CASE WHEN total_NO_OF_STUDENT != 0 THEN DECIMAL(((DECIMAL(NO_OF_STUDENT_PROVINCE,8,2) * 100)/total_NO_OF_STUDENT),8,2) ELSE 0 END AS Total_PROVINCE
,CASE WHEN total_NO_OF_STUDENT != 0 THEN DECIMAL(((DECIMAL(NO_OF_STUDENT_REGION,8,2) * 100)/total_NO_OF_STUDENT),8,2) ELSE 0 END AS Total_REGION
,NO_OF_STUDENT_PROVINCE
,NO_OF_STUDENT_REGION
from
(select DIM_SCHOOL.PROVINCE_CODE,
DIM_SCHOOL.PROVINCE,
DIM_SCHOOL.REGION_CODE,
sum(NO_OF_STUDENT) as NO_OF_STUDENT_PROVINCE,
PRE.NO_OF_STUDENT_REGION,
(
select  sum(fact_pre.NO_OF_STUDENT) as NO_OF_STUDENT_REGION
        from FACT_PRE_ADMISSION_GRADE fact_pre
        left join DIM_SCHOOL school on school.SCHOOL_KEY = fact_pre.SCHOOL_KEY
        left join DIM_SEMESTER SEMESTER on SEMESTER.SEMESTER_KEY = fact_pre.SEMESTER_KEY
        left join DIM_PROGRAM PROGRAMS on PROGRAMS.PROGRAM_KEY = fact_pre.PROGRAM_KEY
        where (school.REGION_CODE not in ('N/A') and school.REGION_CODE not in (''))
        and (SEMESTER.ACADEMIC_YEAR = (paramYEAR))
        and (SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' in (paramSEMESTER))
        and (PROGRAMS.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
) as total_NO_OF_STUDENT
from FACT_PRE_ADMISSION_GRADE
left join DIM_SCHOOL on DIM_SCHOOL.SCHOOL_KEY = FACT_PRE_ADMISSION_GRADE.SCHOOL_KEY
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = FACT_PRE_ADMISSION_GRADE.SEMESTER_KEY
left join DIM_PROGRAM on DIM_PROGRAM.PROGRAM_KEY = FACT_PRE_ADMISSION_GRADE.PROGRAM_KEY
left join (
        select school.REGION_CODE,
        sum(fact_pre.NO_OF_STUDENT) as NO_OF_STUDENT_REGION
        from FACT_PRE_ADMISSION_GRADE fact_pre
        left join DIM_SCHOOL school on school.SCHOOL_KEY = fact_pre.SCHOOL_KEY
        left join DIM_SEMESTER SEMESTER on SEMESTER.SEMESTER_KEY = fact_pre.SEMESTER_KEY
        left join DIM_PROGRAM PROGRAMS on PROGRAMS.PROGRAM_KEY = fact_pre.PROGRAM_KEY
        where (school.REGION_CODE not in ('N/A') and school.REGION_CODE not in (''))
        and (SEMESTER.ACADEMIC_YEAR = (paramYEAR))
        and (SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' in (paramSEMESTER))
        and (PROGRAMS.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
        group by school.REGION_CODE            
)PRE on PRE.REGION_CODE = DIM_SCHOOL.REGION_CODE
where (DIM_SCHOOL.PROVINCE_CODE not in ('N/A') and DIM_SCHOOL.PROVINCE_CODE not in (''))
and (DIM_SEMESTER.ACADEMIC_YEAR = (paramYEAR))
and (DIM_SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' in (paramSEMESTER))
and (DIM_PROGRAM.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
group by DIM_SCHOOL.PROVINCE_CODE,DIM_SCHOOL.PROVINCE,DIM_SCHOOL.REGION_CODE,PRE.NO_OF_STUDENT_REGION
)gj
)gj2
left join COLOR COLOR_PROVINCE on gj2.Total_PROVINCE >= COLOR_PROVINCE.START_COLOR and gj2.Total_PROVINCE <= COLOR_PROVINCE.END_COLOR
left join COLOR COLOR_REGION on gj2.Total_REGION >= COLOR_REGION.START_COLOR and gj2.Total_REGION <= COLOR_REGION.END_COLOR
left join DIM_MAP on gj2.REGION_CODE = DIM_MAP.REGION_MAP_CODE
group by  gj2.PROVINCE_CODE
,gj2.PROVINCE
,gj2.REGION_CODE
,gj2.Total_PROVINCE
,gj2.Total_REGION
,COLOR_PROVINCE.COLOR_CODE
,COLOR_REGION.COLOR_CODE
,NO_OF_STUDENT_PROVINCE
,NO_OF_STUDENT_REGION
,DIM_MAP.REGION_MAP_NAME;
    OPEN result_set_1;
END
