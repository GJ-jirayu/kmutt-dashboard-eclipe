CREATE PROCEDURE p_new_student_by_faculty (IN paramYEAR INTEGER,IN paramSEMESTER VARCHAR(256),IN paramEDU VARCHAR(256) ,IN paramADMTYPE VARCHAR(256) ) 
DYNAMIC RESULT SETS 1 
LANGUAGE SQL 
BEGIN 
    DECLARE result_set_1 CURSOR WITH RETURN TO CLIENT FOR
SELECT case when DIM_FACULTY.FACULTY_NAME_INITIAL = 'KMUTT' then 'อื่นๆ' else FACULTY_NAME_INITIAL end as FACULTY_NAME_INITIAL
,sum(FACT_NEW_STUDENT.NO_OF_STUDENT) as NO_OF_STUDENT
FROM FACT_NEW_STUDENT
left join DIM_SEMESTER on DIM_SEMESTER.SEMESTER_KEY = FACT_NEW_STUDENT.SEMESTER_KEY
left join DIM_PROGRAM on DIM_PROGRAM.PROGRAM_KEY = FACT_NEW_STUDENT.PROGRAM_KEY
left join DIM_ADMISSION_TYPE on DIM_ADMISSION_TYPE.ADMISSION_TYPE_KEY = FACT_NEW_STUDENT.ADMISSION_TYPE_KEY
left join DIM_FIELD on DIM_FIELD.FIELD_KEY = FACT_NEW_STUDENT.FIELD_KEY
left join DIM_FACULTY on DIM_FACULTY.FACULTY_CODE = DIM_FIELD.FACULTY_CODE
where (DIM_SEMESTER.ACADEMIC_YEAR in (paramYEAR))
and (DIM_SEMESTER.SEMESTER_CODE in (paramSEMESTER) or 'All' in (paramSEMESTER))
and (DIM_PROGRAM.EDUCATION_LEVEL_CODE in (paramEDU) or 'All' in (paramEDU))
and (DIM_ADMISSION_TYPE.ADMISSION_TYPE_CODE in (paramADMTYPE) or 'All' in (paramADMTYPE))
group by DIM_FACULTY.FACULTY_CODE
,DIM_FACULTY.FACULTY_NAME_INITIAL
order by DIM_FACULTY.FACULTY_CODE
,NO_OF_STUDENT;
    OPEN result_set_1;
END