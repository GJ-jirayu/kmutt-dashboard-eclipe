CREATE PROCEDURE fn_balance_sheet (IN paramFnYear integer,IN paramFnMonth integer) 
DYNAMIC RESULT SETS 1 
LANGUAGE SQL 
BEGIN 

    DECLARE result_set_1 CURSOR WITH RETURN TO CLIENT FOR

		select rt.item_group_name
		,rt.template_key
		,LEVEL_CODE
		,PARENT
		,coalesce(lastMonthBalance,0) 
		,coalesce(thisMonthBalance,0)
		,CASE WHEN lastMonthBalance = 0 THEN 0 ELSE coalesce(decimal((dec(thisMonthBalance-lastMonthBalance,20,2)/lastMonthBalance)*100, 9,2),0) END AS per_month
		,coalesce(lastYearBalance,0)
		,LEVEL_LINE
		from 
		(select * from fn_dim_report_template where template_code = 1 ) rt
		left join 
		(
				select template_key,sum(this_month_balance)/1000000 as thisMonthBalance
				from fn_monthly_university f,dim_date d
				where f.month_key = d.date_key and d.fiscal_year = paramFnYear and fiscal_month_no <= paramFnMonth and template_code = 1
				group by f.template_key
		) thismonth  on rt.template_key = thismonth.template_key
		left join 
		(
				select template_key,sum(this_month_balance)/1000000 as lastMonthBalance
				from fn_monthly_university f,dim_date d
				where f.month_key = d.date_key and d.fiscal_year = paramFnYear and fiscal_month_no <= paramFnMonth-1 and template_code = 1
				group by f.template_key
		) lastmonth on rt.template_key = lastmonth.template_key
		left join
		(
				select template_key,sum(this_month_balance)/1000000 as lastYearBalance
				from fn_monthly_university f,dim_date d
				where f.month_key = d.date_key and d.fiscal_year = paramFnYear-1 and fiscal_month_no <= 12 and template_code = 1
				group by f.template_key
		) lastyear  on rt.template_key = lastyear.template_key
		order by key_chain
	;
	
	DECLARE result_set_2 CURSOR WITH RETURN TO CLIENT FOR
	
		select rt.item_group_name
		,rt.template_key
		,LEVEL_CODE
		,PARENT
		,coalesce(lastYearBalance,0)  as lastMonthBalance
		,coalesce(thisMonthBalance,0) 
		,CASE WHEN lastYearBalance = 0 THEN 0 ELSE coalesce(decimal((dec(thisMonthBalance-lastYearBalance,20,2)/lastYearBalance)*100, 9,2),0) END AS per_month
		,coalesce(lastYearBalance,0) 
		,LEVEL_LINE
		from 
		(select * from fn_dim_report_template where template_code = 1 ) rt
		left join 
		(
				select template_key,sum(this_month_balance)/1000000 as thisMonthBalance
				from fn_monthly_university f,dim_date d
				where f.month_key = d.date_key and d.fiscal_year = paramFnYear and fiscal_month_no <= 1 and template_code = 1
				group by f.template_key
		) thismonth  on rt.template_key = thismonth.template_key
		left join
		(
				select template_key,sum(this_month_balance)/1000000 as lastYearBalance
				from fn_monthly_university f,dim_date d
				where f.month_key = d.date_key and d.fiscal_year = paramFnYear-1 and fiscal_month_no <= 12 and template_code = 1
				group by f.template_key
		) lastyear  on rt.template_key = lastyear.template_key
		order by key_chain
	;
	
	 IF (paramFnMonth) != '1' THEN
        OPEN  result_set_1;
     ELSE
        OPEN  result_set_2;
     END IF;
END



